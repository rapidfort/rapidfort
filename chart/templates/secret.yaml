apiVersion: v1
kind: Secret
metadata:
  name: rf-secret
  labels:
    {{- include "rapidfort.labels" . | nindent 4 }}
type: "Opaque"
data:
  AWS_ACCESS_KEY_ID: {{ default "" .Values.secret.aws_access_key_id | b64enc | quote }}
  AWS_SECRET_ACCESS_KEY: {{ default "" .Values.secret.aws_secret_access_key | b64enc | quote }}
  AWS_DEFAULT_REGION: {{ default "us-east-1" .Values.secret.aws_default_region | b64enc | quote }}
  RF_ROLE_ARN: {{ default "" .Values.secret.aws_role_arn | b64enc | quote }}
  RF_S3_BUCKET: {{ required "\nERROR: s3 bucket not set!\nUpdate secret.s3_bucket inside chart/values.yaml file." .Values.secret.s3_bucket | b64enc | quote }}
  RF_STORAGE_TYPE: {{ required "\nERROR: storage type not set!\nUpdate secret.storage_type inside chart/values.yaml file." .Values.secret.storage_type | b64enc | quote }}
  RF_GS_CREDS: {{ default "" .Values.secret.gs_cred | b64enc | quote }}
  USERNAME_SMTP: {{ default "" .Values.secret.smtp_username | b64enc | quote }}
  PASSWORD_SMTP: {{ default "" .Values.secret.smtp_password | b64enc | quote }}
  SOURCE_ARN: {{ default "" .Values.secret.smtp_source_arn | b64enc | quote }}  
  KEYCLOAK_JWT_PUB_KEY: {{ default "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt0EwFCzsmzWgn7A8A40hzX1kPHab0WZTmUF8OwHt7fyds6sBiSDPnLIh0BgmXIO2WIrGzARm9dVUeAWI/aUI7qucfgYgW7XSwwz7X/IrX6DExsNZzTLxgIfDJR/WP0fo1vO10BQDAtJxEkX5YvFitBFzg4FLKMZP5inAFM21+jfjD2ufi7NWTyFJR6YCLGFma29XHE75yE76+Xq8eH3DI/8xmrU5hw1Yk5GrABf4KYTijsp+QLQZkEycYvfJEPEMigwnARdp6C3VDp/T8OL1hb2YtrZ4vjZ80azEicQ3ea/R05JK6ikfik2SlC5Rm0Ore0Rh4jB1tI51biVa0smsiwIDAQAB" .Values.secret.keycloak_jwt_pub_key | b64enc | quote }}      
  KEYCLOAK_CLIENT_ID: {{ default "scanners" .Values.secret.keycloak_client_id | b64enc | quote }}
  KEYCLOAK_REALM: {{ default "customers" .Values.secret.keycloak_realm | b64enc | quote }}
  KEYCLOAK_SERVICE_ACCOUNT_CLIENT_ID: {{ default "admin-cli" .Values.secret.keycloak_service_account_client_id | b64enc | quote }}
  KEYCLOAK_SERVICE_ACCOUNT_CLIENT_SECRET: {{ default "5b97220c-838a-4186-bcdd-8cdb77d0e0f3" .Values.secret.keycloak_service_account_client_secret | b64enc | quote }}
  DB_URL: {{ default "mysql+mysqldb://root:RF-123579@mysql/standalone" .Values.secret.db_url | b64enc | quote }}
  RF_APP_HOST: {{ default "" .Values.secret.rf_app_host | b64enc | quote}}
  RF_APP_ADMIN: {{ required "\nERROR: admin user not set!\nUpdate secret.rf_app_admin inside chart/values.yaml file." .Values.secret.rf_app_admin | b64enc | quote}}
  RF_APP_ADMIN_PASSWD: {{ required "\nERROR: admin password not set!\nUpdate secret.rf_app_admin_passwd inside chart/values.yaml file." .Values.secret.rf_app_admin_passwd | b64enc | quote}}
  DEPLOY_MODE: {{ default "STANDALONE" .Values.secret.deploy_mode | b64enc | quote}}
  RF_VERBOSE: {{ default "0" .Values.secret.rf_verbose| toString | b64enc | quote }}

{{- if not .Values.secret.storage_type }}
  {{- fail "\nERROR: storage type not set!\nUpdate secret.storage_type inside chart/values.yaml file." }}
{{- else if eq .Values.secret.storage_type "s3" }}
  {{- if not .Values.secret.aws_role_arn }}
    {{- if or (not .Values.secret.aws_access_key_id) (not .Values.secret.aws_secret_access_key) }}
      {{- fail "\nERROR: aws_role_arn or aws_access_key_id, aws_secret_access_key is not set!\nUpdate secret.aws_role_arn or secret.aws_access_key_id, secret.aws_secret_access_key inside chart/values.yaml file." }}
    {{- end }}
  {{- end }}
{{- else if eq .Values.secret.storage_type "gs" }}
  {{- if not .Values.secret.gs_cred }}
    {{- fail "\nERROR: gs_cred is not set!\nUpdate secret.gs_cred inside chart/values.yaml file." }}
  {{- end }}
{{- else if ne .Values.secret.storage_type "ls" }}
  {{- fail "\nERROR: Invalid value for secret.storage_type.\n Valid values are as below.\n 1. AWS Deployment - s3\n 2. GCP Deployment - gs\n 3. Local Deployment - ls \nUpdate secret.storage_type inside chart/values.yaml file." }}
{{- end }}
# Default values for rfapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository:  274057717848.dkr.ecr.us-east-1.amazonaws.com/rfapi
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: "rfapi"
fullnameOverride: "rfapi"

global:
  rf_app_host: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  container_port: 8080

ingress:
  websocket:
    enabled: true
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_set_header Upgrade "websocket";
        proxy_set_header Connection "Upgrade";
      nginx.ingress.kubernetes.io/server-snippets: |
        location /rfapi/events {
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host $host;
        }
    hosts:
      - host:
        paths:
          - path: /rfapi/events
            pathType: ImplementationSpecific
    tls: []
  http:
    enabled: true
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host:
        paths:
          - path: /rfapi
            pathType: ImplementationSpecific
    tls: []

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  rf_debug: false
  redis_host: "redis"
  redis_host_locks: lock-redis
  redis_host_files: files-redis
  redis_port: "6379"
  redis_pwd: ""

container:
  extra_options: {}

livenessProbe:
  periodSeconds: 30
  initialDelaySeconds: 15
  timeoutSeconds: 30
  failureThreshold: 10

readinessProbe:
  periodSeconds: 30
  initialDelaySeconds: 15
  timeoutSeconds: 30 
  failureThreshold: 10

probeCommand:
  httpGet:
    path: /
    port: rfapi-http

# Default values for rf-scan.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: 274057717848.dkr.ecr.us-east-1.amazonaws.com/rf-scan
  pullPolicy: IfNotPresent

global:
  rf_app_host: ""

env:
  backend_service_name: "backend"
  debug: off
  rf_debug: false
  redis_host: "redis"
  redis_host_locks: lock-redis
  redis_host_files: files-redis
  redis_port: "6379"
  redis_pwd: "" 
  redis_host_ha: "redis"
  redis_port_ha: "6379"
  redis_pwd_ha: ""
  redis_db_ha: 4   

imagePullSecrets: []
nameOverride: "rf-scan"
fullnameOverride: "rf-scan"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}

podSecurityContext:
  {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  container_port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
  hosts:
    - host: 
      paths:
        - path: /rf-scan/.*
          pathType: ImplementationSpecific
  tls: []

resources:
  limits:
    cpu: 1000m
    memory: 2048Mi
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

keycloak:
  serviceName: keycloak

secret:
  name: "rf-secret"
  keys:
    - AWS_DEFAULT_REGION
    - DB_URL
    - RF_S3_BUCKET
    - RF_STORAGE_TYPE
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - RF_ROLE_ARN
    - RF_GS_CREDS
    - KEYCLOAK_JWT_PUB_KEY
    - KEYCLOAK_REALM
    - KEYCLOAK_CLIENT_ID
    - KEYCLOAK_SERVICE_ACCOUNT_CLIENT_ID
    - KEYCLOAK_SERVICE_ACCOUNT_CLIENT_SECRET
    - RF_APP_HOST
    - DEPLOY_MODE
    - RF_VERBOSE
    - RF_AZURE_CONNECTION_STRING    

volumes:
  - name: local-bucket
    hostPath:
      path: /opt/rapidfort/local-bucket/

volumeMounts:
  - name: local-bucket
    mountPath: "/opt/rapidfort/local-bucket"

container:
  extra_options: {}

livenessProbe:
  periodSeconds: 10
  initialDelaySeconds: 5
  timeoutSeconds: 99
  failureThreshold: 77

readinessProbe:
  periodSeconds: 10
  initialDelaySeconds: 5
  timeoutSeconds: 99
  failureThreshold: 77
  
probeCommand:
  httpGet:
    path: /
    port: rf-scan-http  

init_containers:
  - name: init-vulns
    image: public.ecr.aws/rapidfort/init
    command:
      - "/bin/bash"
      - "-c"
      - "until [ $(curl --connect-timeout 1 -sw '%{http_code}' http://vulns-db/vulns-db/api/v1/vulnsdb -o /dev/null) -eq 200 ]; do echo vulns-db not ready; sleep 1; done"
  - name: init-backend
    image: public.ecr.aws/rapidfort/init
    command:
      - "/bin/bash"
      - "-c"
      - "until [ $(curl --connect-timeout 1 -sw '%{http_code}' http://backend -o /dev/null) -eq 200 ]; do echo backend not ready; sleep 1; done"